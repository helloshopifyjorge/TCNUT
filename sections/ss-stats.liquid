

{%- liquid
  assign padding_horizontal = section.settings.padding_horizontal
  assign padding_horizontal_mobile = section.settings.padding_horizontal_mobile
  assign padding_top = section.settings.padding_top
  assign padding_bottom = section.settings.padding_bottom
  assign border_color = section.settings.border_color
  assign border_thickness = section.settings.border_thickness
  assign margin_top = section.settings.margin_top
  assign margin_bottom = section.settings.margin_bottom
  assign margin_horizontal_mobile = section.settings.margin_horizontal_mobile
  assign margin_horizontal = section.settings.margin_horizontal
  assign background_color = section.settings.background_color
  assign background_gradient = section.settings.background_gradient
  assign full_width = section.settings.full_width
  assign content_width = section.settings.content_width
  assign section_radius = section.settings.section_radius
  assign background_style = section.settings.background_style

  assign items_per_row = section.settings.items_per_row
  assign items_mt = section.settings.items_mt
  assign items_mt_mobile = section.settings.items_mt_mobile
  assign items_gap = section.settings.items_gap

  assign item_padding_horizontal = section.settings.item_padding_horizontal
  assign item_padding_horizontal_mobile = section.settings.item_padding_horizontal_mobile
  assign item_padding_vertical = section.settings.item_padding_vertical
  assign item_padding_vertical_mobile = section.settings.item_padding_vertical_mobile
  assign item_border_thickness = section.settings.item_border_thickness
  assign item_border_color = section.settings.item_border_color
  assign item_gap = section.settings.item_gap
  assign item_gap_mobile = section.settings.item_gap_mobile
  assign item_width = section.settings.item_width
  assign item_width_mobile = section.settings.item_width_mobile

  assign item_content_align = section.settings.item_content_align
  assign item_content_align_mobile = section.settings.item_content_align_mobile

  assign item_content_horizontal_align = ''
  if item_content_align == 'center'
    assign item_content_horizontal_align = 'center'
  elsif item_content_align == 'right'
    assign item_content_horizontal_align = 'end'
  else
    assign item_content_horizontal_align = 'start'
  endif

  assign item_content_horizontal_align_mobile = ''
  if item_content_align_mobile == 'center'
    assign item_content_horizontal_align_mobile = 'center'
  elsif item_content_align_mobile == 'right'
    assign item_content_horizontal_align_mobile = 'end'
  else
    assign item_content_horizontal_align_mobile = 'start'
  endif

  assign count_custom = section.settings.count_custom
  assign count_font = section.settings.count_font
  assign count_size = section.settings.count_size
  assign count_size_mobile = section.settings.count_size_mobile
  assign count_height = section.settings.count_height
  assign count_color = section.settings.count_color

  assign count_speed = section.settings.count_speed

  assign text_custom = section.settings.text_custom
  assign text_font = section.settings.text_font
  assign text_size = section.settings.text_size
  assign text_size_mobile = section.settings.text_size_mobile
  assign text_height = section.settings.text_height
  assign text_color = section.settings.text_color
-%}

{%- style -%}
  {{ count_font | font_face: font_display: 'swap' }}
  {{ text_font | font_face: font_display: 'swap' }}

  .section-{{ section.id }} {
    border-top: solid {{ border_color }} {{ border_thickness }}px;
    border-bottom: solid {{ border_color }} {{ border_thickness }}px;
    margin-top: {{ margin_top | times: 0.75 | round: 0 }}px;
    margin-bottom: {{ margin_bottom | times: 0.75 | round: 0 }}px;
    margin-left: {{ margin_horizontal_mobile }}rem;
    margin-right: {{ margin_horizontal_mobile }}rem;
    border-radius: {{ section_radius | times: 0.6 | round: 0 }}px;
    overflow: hidden;
  }

  .section-{{ section.id }}-settings {
    margin: 0 auto;
    padding-top: {{ padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ padding_bottom | times: 0.75 | round: 0 }}px;
    padding-left: {{ padding_horizontal_mobile }}rem;
    padding-right: {{ padding_horizontal_mobile }}rem;
  }

  .stats-items-{{ section.id }} {
    display: grid;
    grid-template-columns: 1fr;
    margin-top: {{ items_mt_mobile }}px;
  }

  .stats-item-{{ section.id }} {
    display: flex;
    gap: {{ item_gap_mobile }}px;
    align-items: center;
    justify-content: {{ item_content_horizontal_align_mobile }};
    transition: all 0.25s ease 0s;
    padding: {{ item_padding_vertical_mobile }}px {{ item_padding_horizontal_mobile }}px;
    text-decoration: none;
  }

  .stats-item-{{ section.id }}:not(:last-child) {
    border-bottom: {{ item_border_thickness }}px solid {{ item_border_color }};
    border-right: 0px;
  }

  .stats-count-wrapper-{{ section.id }} {
    display: flex;
    gap: 5px;
    width: {{ item_width_mobile }}px;
    flex-shrink: 0;
    align-items: center;
    justify-content: {{ item_content_horizontal_align_mobile }};
  }

  .stats-count-text-{{ section.id }} {
    margin: 0;
    text-align: {{ item_content_align_mobile }};
    font-size: {{ count_size_mobile }}px;
    color: {{ count_color }};
    line-height: {{ count_height }}%;
    text-transform: unset;
    text-decoration: none;
    transition: all 0.25s ease 0s;
  }

  .stats-item-text-{{ section.id }} {
    width: 60%;
    text-align: {{ item_content_align_mobile }};
  }

  .stats-item-text-{{ section.id }} * {
    margin: 0;
    font-size: {{ text_size_mobile }}px;
    color: {{ text_color }};
    line-height: {{ text_height }}%;
    text-transform: unset;
    text-decoration: none;
    transition: all 0.25s ease 0s;
  }

  @media(min-width: 1024px) {

    .section-{{ section.id }} {
      margin-top: {{ margin_top }}px;
      margin-bottom: {{ margin_bottom }}px;
      margin-left: {{ margin_horizontal }}rem;
      margin-right: {{ margin_horizontal }}rem;
      border-radius: {{ section_radius }}px;
    }

    .section-{{ section.id }}-settings {
      padding: 0 5rem;
      padding-top: {{ padding_top }}px;
      padding-bottom: {{ padding_bottom }}px;
      padding-left: {{ padding_horizontal }}rem;
      padding-right: {{ padding_horizontal }}rem;
    }

    .stats-items-{{ section.id }} {
      grid-template-columns: repeat({{ items_per_row }}, 1fr);
      margin-top: {{ items_mt }}px;
      gap: {{ items_gap }}px;
    }

    .stats-item-{{ section.id }} {
      justify-content: {{ item_content_horizontal_align }};
      padding: {{ item_padding_vertical }}px {{ item_padding_horizontal }}px {{ item_padding_vertical }}px 0;
      gap: {{ item_gap }}px;
    }

    .stats-item-{{ section.id }}:not(:last-child) {
      border-bottom: 0px;
      border-right: {{ item_border_thickness }}px solid {{ item_border_color }};
    }

    .stats-count-wrapper-{{ section.id }} {
      justify-content: {{ item_content_horizontal_align }};
      width: {{ item_width }}px;
    }

    .stats-count-text-{{ section.id }} {
      font-size: {{ count_size }}px;
      text-align: {{ item_content_align }};
    }

    .stats-item-text-{{ section.id }} {
      text-align: {{ item_content_align }};
    }

    .stats-item-text-{{ section.id }} * {
      font-size: {{ text_size }}px;
    }
  }
{%- endstyle -%}

{% unless full_width %}
  <style>
    .section-{{ section.id }}-settings {
      max-width: {{ content_width }}px;
    }
  </style>
{% endunless %}

{% if margin_horizontal_mobile > 0 %}
  <style>
    .section-{{ section.id }} {
      border-left: solid {{ border_color }} {{ border_thickness }}px;
      border-right: solid {{ border_color }} {{ border_thickness }}px;
    }

    @media(min-width: 1024px) {
      .section-{{ section.id }} {
        border-left: 0px;
        border-right: 0px;
      }
    }
  </style>
{% endif %}

{% if item_content_align_mobile == 'center' %}
  <style>
    .stats-item-{{ section.id }} {
      flex-direction: column;
    }
  </style>
{% elsif item_content_align_mobile == 'right' %}
  <style>
    .stats-item-{{ section.id }} {
      flex-direction: row-reverse;
    }
  </style>
{% endif %}

{% if item_content_align == 'center' %}
  <style>
    @media(min-width: 1024px) {
      .stats-item-{{ section.id }} {
        flex-direction: column;
      }
    }
  </style>
{% elsif item_content_align == 'right' %}
  <style>
    @media(min-width: 1024px) {
      .stats-item-{{ section.id }} {
        flex-direction: row-reverse;
      }
    }
  </style>
{% endif %}

{% if margin_horizontal > 0 %}
  <style>
    @media(min-width: 1024px) {
      .section-{{ section.id }} {
        border-left: solid {{ border_color }} {{ border_thickness }}px;
        border-right: solid {{ border_color }} {{ border_thickness }}px;
      }
    }
  </style>
{% endif %}

{% if count_custom %}
  <style>
    .stats-count-text-{{ section.id }} {
      font-family: {{ count_font.family }}, {{ count_font.fallback_families }};
      font-weight: {{ count_font.weight }};
      font-style: {{ count_font.style }};
    }
  </style>
{% endif %}

{% if text_custom %}
  <style>
    .stats-item-text-{{ section.id }} * {
      font-family: {{ text_font.family }}, {{ text_font.fallback_families }};
      font-weight: {{ text_font.weight }};
      font-style: {{ text_font.style }};
    }
  </style>
{% endif %}

{% for block in section.blocks %}
  {% case block.type %}
    {% when 'heading' %}
      <style>
        {{  block.settings.heading_font | font_face: font_display: 'swap' }}

        .stats-heading-{{ block.id }} {
          text-align: {{ block.settings.heading_align_mobile }};
        }

        .stats-heading-{{ block.id }} * {
          margin: 0;
          font-size: {{ block.settings.heading_size_mobile }}px;
          color: {{ block.settings.heading_color }};
          line-height: {{ block.settings.heading_height }}%;
          text-transform: unset;
          word-break: break-word;
        }

        @media(min-width: 1024px) {

          .stats-heading-{{ block.id }} {
            text-align: {{ block.settings.heading_align }};
          }

          .stats-heading-{{ block.id }} * {
            font-size: {{ block.settings.heading_size }}px;
          }
        }
      </style>

      {% if block.settings.heading_custom %}
        <style>
          .stats-heading-{{ block.id }} * {
            font-family: {{ block.settings.heading_font.family }}, {{ block.settings.heading_font.fallback_families }};
            font-weight: {{ block.settings.heading_font.weight }};
            font-style: {{ block.settings.heading_font.style }};
          }
        </style>
      {% endif %}

    {% when 'text' %}
      <style>
        {{  block.settings.text_font | font_face: font_display: 'swap' }}

        .stats-text-{{ block.id }} {
          text-align: {{ block.settings.text_align_mobile }};
          margin-top: {{ block.settings.text_mt_mobile }}px;
        }

        .stats-text-{{ block.id }} * {
          margin: 0;
          font-size: {{ block.settings.text_size_mobile }}px;
          color: {{ block.settings.text_color }};
          line-height: {{ block.settings.text_height }}%;
          text-transform: unset;
        }

        @media(min-width: 1024px) {

          .stats-text-{{ block.id }} {
            text-align: {{ block.settings.text_align }};
            margin-top: {{ block.settings.text_mt }}px;
          }

          .stats-text-{{ block.id }} * {
            font-size: {{ block.settings.text_size }}px;
          }

        }
      </style>

      {% if block.settings.text_custom %}
        <style>
          .stats-text-{{ block.id }} * {
            font-family: {{ block.settings.text_font.family }}, {{ block.settings.text_font.fallback_families }};
            font-weight: {{ block.settings.text_font.weight }};
            font-style: {{ block.settings.text_font.style }};
          }
        </style>
      {% endif %}
  {% endcase %}
{% endfor %}

<div
  class="section-{{ section.id }} stats-{{ section.id }}"
  {% if background_style == 'solid' %}
    style="background-color:{{ background_color }};"
  {% else %}
    style="background-image: {{ background_gradient }};"
  {% endif %}
>
  <div class="section-{{ section.id }}-settings">
    {% for block in section.blocks %}
      {% if block.type == 'heading' %}
        {% if block.settings.heading != blank %}
          <div class="stats-heading-{{ block.id }}">
            {{ block.settings.heading }}
          </div>
        {% endif %}
      {% endif %}
    {% endfor %}
    <div class="stats-items-{{ section.id }}">
      {% for block in section.blocks %}
        {% if block.type == 'item' %}
          <div class="stats-item-{{ section.id }}">
            <div class="stats-count-wrapper-{{ section.id }}">
              {% if block.settings.count_from != blank %}
                <p
                  class="stats-count-text-{{ section.id }} stats-count-{{ section.id }}"
                  data-from="{{ block.settings.count_from }}"
                  data-to="{{ block.settings.count_to }}"
                >
                  {{ block.settings.count_from }}
                </p>
              {% endif %}
              {% if block.settings.suffix != blank %}
                <p class="stats-count-text-{{ section.id }}">{{ block.settings.suffix }}</p>
              {% endif %}
            </div>
            {% if block.settings.text != blank %}
              <div class="stats-item-text-{{ section.id }}">{{ block.settings.text }}</div>
            {% endif %}
          </div>
        {% endif %}
      {% endfor %}
    </div>
    {% for block in section.blocks %}
      {% if block.type == 'text' %}
        {% if block.settings.text != blank %}
          <div class="stats-text-{{ block.id }}">
            {{ block.settings.text }}
          </div>
        {% endif %}
      {% endif %}
    {% endfor %}
  </div>
</div>

<script>
  function initStats() {
    const elements = document.querySelectorAll('.stats-count-{{ section.id }}');
    const animatedElements = new Set();

    elements.forEach(el => {
      const from = parseInt(el.dataset.from.replace(/,/g, ''), 10) || 0;
      const to = parseInt(el.dataset.to.replace(/,/g, ''), 10) || 0;
      const speed = {{ count_speed }};
      let current = from;

      function formatNumber(num) {
        return num.toLocaleString('en-US');
      }

      function animateCount() {
        current += (to - from) / (speed * 60);
        if ((to > from && current >= to) || (to < from && current <= to)) {
          current = to;
          el.textContent = formatNumber(Math.round(current));
          return;
        }
        el.textContent = formatNumber(Math.round(current));
        requestAnimationFrame(animateCount);
      }

      function handleIntersection(entries) {
        entries.forEach(entry => {
          if (entry.isIntersecting && !animatedElements.has(el)) {
            animatedElements.add(el);
            current = from;
            animateCount();
            observer.disconnect();
          }
        });
      }

      const observer = new IntersectionObserver(handleIntersection, {
        root: null,
        threshold: 0.5,
      });

      observer.observe(el.closest('.stats-{{ section.id }}'));
    });
  }

  document.addEventListener('DOMContentLoaded', initStats);

  if (Shopify.designMode) {
    document.addEventListener('shopify:section:unload', initStats);
    document.addEventListener('shopify:section:load', initStats);
  }
</script>

{% schema %}
{
  "name": "SS - Stats #2",
  "settings": [
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "items_per_row",
      "min": 1,
      "max": 5,
      "step": 1,
      "label": "Items per row",
      "default": 3
    },
    {
      "type": "range",
      "id": "items_gap",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Gap",
      "default": 24
    },
    {
      "type": "range",
      "id": "items_mt",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Margin top",
      "default": 40
    },
    {
      "type": "range",
      "id": "items_mt_mobile",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Margin top - mobile",
      "default": 16
    },
    {
      "type": "range",
      "id": "item_padding_horizontal",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding horizontal",
      "default": 48
    },
    {
      "type": "range",
      "id": "item_padding_horizontal_mobile",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding horizontal - mobile",
      "default": 0
    },
    {
      "type": "range",
      "id": "item_padding_vertical",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding vertical",
      "default": 0
    },
    {
      "type": "range",
      "id": "item_padding_vertical_mobile",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding vertical - mobile",
      "default": 12
    },
    {
      "type": "range",
      "id": "item_border_thickness",
      "min": 0,
      "max": 10,
      "step": 1,
      "unit": "px",
      "label": "Border thickness",
      "default": 1
    },
    {
      "type": "text_alignment",
      "id": "item_content_align",
      "label": "Alignment"
    },
    {
      "type": "text_alignment",
      "id": "item_content_align_mobile",
      "label": "Alignment - mobile"
    },
    {
      "type": "header",
      "content": "Count"
    },
    {
      "type": "checkbox",
      "id": "count_custom",
      "label": "Use custom font",
      "default": false
    },
    {
      "type": "font_picker",
      "id": "count_font",
      "label": "Font family",
      "default": "josefin_sans_n4",
      "visible_if": "{{ section.settings.count_custom }}"
    },
    {
      "type": "range",
      "id": "count_size",
      "min": 0,
      "max": 72,
      "step": 2,
      "unit": "px",
      "label": "Font size",
      "default": 56
    },
    {
      "type": "range",
      "id": "count_size_mobile",
      "min": 0,
      "max": 72,
      "step": 2,
      "unit": "px",
      "label": "Font size - mobile",
      "default": 40
    },
    {
      "type": "range",
      "id": "count_height",
      "min": 50,
      "max": 200,
      "step": 10,
      "unit": "%",
      "label": "Line height",
      "default": 130
    },
    {
      "type": "range",
      "id": "count_speed",
      "min": 0,
      "max": 10,
      "step": 1,
      "unit": "s",
      "label": "Animation speed",
      "default": 2
    },
    {
      "type": "range",
      "id": "item_width",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Width",
      "default": 120
    },
    {
      "type": "range",
      "id": "item_width_mobile",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Width - mobile",
      "default": 100
    },
    {
      "type": "range",
      "id": "item_gap",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Gap",
      "default": 24
    },
    {
      "type": "range",
      "id": "item_gap_mobile",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Gap - mobile",
      "default": 24
    },
    {
      "type": "header",
      "content": "Text"
    },
    {
      "type": "checkbox",
      "id": "text_custom",
      "label": "Use custom font",
      "default": false
    },
    {
      "type": "font_picker",
      "id": "text_font",
      "label": "Font family",
      "default": "josefin_sans_n4",
      "visible_if": "{{ section.settings.text_custom }}"
    },
    {
      "type": "range",
      "id": "text_size",
      "min": 0,
      "max": 40,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 14
    },
    {
      "type": "range",
      "id": "text_size_mobile",
      "min": 0,
      "max": 40,
      "step": 1,
      "unit": "px",
      "label": "Font size - mobile",
      "default": 12
    },
    {
      "type": "range",
      "id": "text_height",
      "min": 50,
      "max": 200,
      "step": 10,
      "unit": "%",
      "label": "Line height",
      "default": 150
    },
    {
      "type": "header",
      "content": "Stats colors"
    },
    {
      "type": "color",
      "label": "Count",
      "id": "count_color",
      "default": "#121212"
    },
    {
      "type": "color",
      "label": "Text",
      "id": "text_color",
      "default": "#121212"
    },
    {
      "type": "color",
      "label": "Border",
      "id": "item_border_color",
      "default": "#121212"
    },
    {
      "type": "header",
      "content": "Section colors"
    },
    {
      "type": "select",
      "id": "background_style",
      "label": "Background style",
      "default": "solid",
      "options": [
        {
          "label": "Solid",
          "value": "solid"
        },
        {
          "label": "Gradient",
          "value": "gradient"
        }
      ]
    },
    {
      "type": "color",
      "label": "Background",
      "id": "background_color",
      "default": "#FFFFFF",
      "visible_if": "{{ section.settings.background_style == 'solid' }}"
    },
    {
      "type": "color_background",
      "id": "background_gradient",
      "label": "Gradient",
      "default": "linear-gradient(180deg, #FFFFFF 0%, #F2F2F2 100%)",
      "visible_if": "{{ section.settings.background_style == 'gradient' }}"
    },
    {
      "type": "color",
      "label": "Border",
      "id": "border_color",
      "default": "#121212"
    },
    {
      "type": "header",
      "content": "Section margin (outside)"
    },
    {
      "type": "range",
      "id": "margin_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top",
      "default": 0
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom",
      "default": 0
    },
    {
      "type": "range",
      "id": "margin_horizontal",
      "min": 0,
      "max": 30,
      "step": 1,
      "unit": "rem",
      "label": "Sides",
      "default": 0
    },
    {
      "type": "range",
      "id": "margin_horizontal_mobile",
      "min": 0,
      "max": 15,
      "step": 0.5,
      "unit": "rem",
      "label": "Sides - mobile",
      "default": 0
    },
    {
      "type": "header",
      "content": "Section padding (inside)"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_horizontal",
      "min": 0,
      "max": 30,
      "step": 1,
      "unit": "rem",
      "label": "Sides",
      "default": 5
    },
    {
      "type": "range",
      "id": "padding_horizontal_mobile",
      "min": 0,
      "max": 15,
      "step": 0.5,
      "unit": "rem",
      "label": "Sides - mobile",
      "default": 1.5
    },
    {
      "type": "header",
      "content": "Section"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Full width",
      "default": false
    },
    {
      "type": "range",
      "id": "content_width",
      "min": 800,
      "max": 2000,
      "step": 100,
      "unit": "px",
      "label": "Content width",
      "default": 1200,
      "visible_if": "{{  section.settings.full_width == false }}"
    },
    {
      "type": "range",
      "id": "border_thickness",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Border thickness",
      "default": 0
    },
    {
      "type": "range",
      "id": "section_radius",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Roundness",
      "default": 0
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "limit": 1,
      "name": "Heading",
      "settings": [
        {
          "type": "richtext",
          "id": "heading",
          "label": "Heading",
          "default": "<h2>HEADING</h2>"
        },
        {
          "type": "checkbox",
          "id": "heading_custom",
          "label": "Use custom font",
          "default": false
        },
        {
          "type": "font_picker",
          "id": "heading_font",
          "label": "Font family",
          "default": "josefin_sans_n4",
          "visible_if": "{{ block.settings.heading_custom }}"
        },
        {
          "type": "range",
          "id": "heading_size",
          "min": 0,
          "max": 72,
          "step": 2,
          "unit": "px",
          "label": "Font size",
          "default": 14
        },
        {
          "type": "range",
          "id": "heading_size_mobile",
          "min": 0,
          "max": 72,
          "step": 2,
          "unit": "px",
          "label": "Font size - mobile",
          "default": 14
        },
        {
          "type": "range",
          "id": "heading_height",
          "min": 50,
          "max": 200,
          "step": 10,
          "unit": "%",
          "label": "Line height",
          "default": 130
        },
        {
          "type": "text_alignment",
          "id": "heading_align",
          "label": "Alignment"
        },
        {
          "type": "text_alignment",
          "id": "heading_align_mobile",
          "label": "Alignment - mobile"
        },
        {
          "type": "color",
          "label": "Color",
          "id": "heading_color",
          "default": "#121212"
        }
      ]
    },
    {
      "type": "text",
      "name": "Text",
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "label": "Text",
          "default": "<p>Tell your story</p>"
        },
        {
          "type": "checkbox",
          "id": "text_custom",
          "label": "Use custom font",
          "default": false
        },
        {
          "type": "font_picker",
          "id": "text_font",
          "label": "Font family",
          "default": "josefin_sans_n4",
          "visible_if": "{{ block.settings.text_custom }}"
        },
        {
          "type": "range",
          "id": "text_size",
          "min": 0,
          "max": 40,
          "step": 1,
          "unit": "px",
          "label": "Font size",
          "default": 12
        },
        {
          "type": "range",
          "id": "text_size_mobile",
          "min": 0,
          "max": 40,
          "step": 1,
          "unit": "px",
          "label": "Font size - mobile",
          "default": 12
        },
        {
          "type": "range",
          "id": "text_height",
          "min": 50,
          "max": 200,
          "step": 10,
          "unit": "%",
          "label": "Line height",
          "default": 150
        },
        {
          "type": "range",
          "id": "text_mt",
          "min": 0,
          "max": 100,
          "step": 2,
          "unit": "px",
          "label": "Margin top",
          "default": 48
        },
        {
          "type": "range",
          "id": "text_mt_mobile",
          "min": 0,
          "max": 100,
          "step": 2,
          "unit": "px",
          "label": "Margin top - mobile",
          "default": 32
        },
        {
          "type": "text_alignment",
          "id": "text_align",
          "label": "Alignment"
        },
        {
          "type": "text_alignment",
          "id": "text_align_mobile",
          "label": "Alignment - mobile"
        },
        {
          "type": "color",
          "label": "Color",
          "id": "text_color",
          "default": "#121212"
        }
      ]
    },
    {
      "type": "item",
      "name": "Highlight stat",
      "settings": [
        {
          "type": "text",
          "id": "count_from",
          "label": "Count from",
          "default": "1",
          "info": "Use number"
        },
        {
          "type": "text",
          "id": "count_to",
          "label": "Count to",
          "default": "12",
          "info": "Use number"
        },
        {
          "type": "text",
          "id": "suffix",
          "label": "Suffix"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "Text",
          "default": "<p>Tell a story, explain a product detail, or describe a new promotion.</p>"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "SS - Stats #2",
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "item",
          "settings": {
            "count_to": "50",
            "suffix": "%"
          }
        },
        {
          "type": "item",
          "settings": {
            "count_to": "15",
            "suffix": "%"
          }
        },
        {
          "type": "item",
          "settings": {
            "count_to": "30",
            "suffix": "%"
          }
        },
        {
          "type": "text"
        }
      ]
    }
  ]
}
{% endschema %}
